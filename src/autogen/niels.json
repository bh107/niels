{
   "op2node": {
      "add": "Add",
      "and": "And",
      "bw_and": "BwAnd",
      "bw_lshift": "BwLshift",
      "bw_not": "BwNot",
      "bw_or": "BwOr",
      "bw_rshift": "BwRshift",
      "bw_xor": "BwXor",
      "div": "Div",
      "equal": "Equal",
      "gthan": "Gthan",
      "gthan_equal": "GthanEqual",
      "lthan": "Lthan",
      "lthan_equal": "LthanEqual",
      "mod": "Mod",
      "mul": "Mul",
      "not": "Not",
      "not_equal": "NotEqual",
      "or": "Or",
      "pow": "Pow",
      "sub": "Sub",
      "xor": "Xor"
   },
   "operators": [
   ["arithmetic", "add", 2, {
            "array": [
            "*res->value().{res_t} = bh_add(*in1->value().{in1_t}, *in2->value().{in2_t})", 
            [
               ["bul_a", "bul_a", "bul_a"], 
               ["c128_a", "c128_a", "c128_a"], 
               ["c64_a", "c64_a", "c64_a"], 
               ["i32_a", "i32_a", "i32_a"], 
               ["i64_a", "i64_a", "i64_a"], 
               ["r32_a", "r32_a", "r32_a"], 
               ["r64_a", "r64_a", "r64_a"]]],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} + in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["i32", "bul", "i32"], 
               ["i32", "i32", "bul"], 
               ["i32", "i32", "i32"], 
               ["i64", "bul", "i64"], 
               ["i64", "i32", "i64"], 
               ["i64", "i64", "bul"], 
               ["i64", "i64", "i32"], 
               ["i64", "i64", "i64"], 
               ["r32", "bul", "r32"], 
               ["r32", "i32", "r32"], 
               ["r32", "i64", "r32"], 
               ["r32", "r32", "bul"], 
               ["r32", "r32", "i32"], 
               ["r32", "r32", "i64"], 
               ["r32", "r32", "r32"], 
               ["r64", "bul", "r64"], 
               ["r64", "i32", "r64"], 
               ["r64", "i64", "r64"], 
               ["r64", "r32", "r64"], 
               ["r64", "r64", "bul"], 
               ["r64", "r64", "i32"], 
               ["r64", "r64", "i64"], 
               ["r64", "r64", "r32"], 
               ["r64", "r64", "r64"]]]
         }], 
   ["arithmetic", "sub", 2, {
            "array": [
            "*res->value().{res_t} = bxx::bh_subtract(*in1->value().{in1_t}, *in2->value().{in2_t})", 
            [
               ["bul_a", "bul_a", "bul_a"], 
               ["c128_a", "c128_a", "c128_a"], 
               ["c64_a", "c64_a", "c64_a"], 
               ["i32_a", "i32_a", "i32_a"], 
               ["i64_a", "i64_a", "i64_a"], 
               ["r32_a", "r32_a", "r32_a"], 
               ["r64_a", "r64_a", "r64_a"]]],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} - in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["i32", "bul", "i32"], 
               ["i32", "i32", "bul"], 
               ["i32", "i32", "i32"], 
               ["i64", "bul", "i64"], 
               ["i64", "i32", "i64"], 
               ["i64", "i64", "bul"], 
               ["i64", "i64", "i32"], 
               ["i64", "i64", "i64"], 
               ["r32", "bul", "r32"], 
               ["r32", "i32", "r32"], 
               ["r32", "i64", "r32"], 
               ["r32", "r32", "bul"], 
               ["r32", "r32", "i32"], 
               ["r32", "r32", "i64"], 
               ["r32", "r32", "r32"], 
               ["r64", "bul", "r64"], 
               ["r64", "i32", "r64"], 
               ["r64", "i64", "r64"], 
               ["r64", "r32", "r64"], 
               ["r64", "r64", "bul"], 
               ["r64", "r64", "i32"], 
               ["r64", "r64", "i64"], 
               ["r64", "r64", "r32"], 
               ["r64", "r64", "r64"]]]
         }], 
   ["arithmetic", "mul", 2, {
            "array": [
            "*res->value().{res_t} = bxx::bh_multiply(*in1->value().{in1_t}, *in2->value().{in2_t})", 
            [
               ["bul_a", "bul_a", "bul_a"], 
               ["c128_a", "c128_a", "c128_a"], 
               ["c64_a", "c64_a", "c64_a"], 
               ["i32_a", "i32_a", "i32_a"], 
               ["i64_a", "i64_a", "i64_a"], 
               ["r32_a", "r32_a", "r32_a"], 
               ["r64_a", "r64_a", "r64_a"]]],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} * in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["i32", "bul", "i32"], 
               ["i32", "i32", "bul"], 
               ["i32", "i32", "i32"], 
               ["i64", "bul", "i64"], 
               ["i64", "i32", "i64"], 
               ["i64", "i64", "bul"], 
               ["i64", "i64", "i32"], 
               ["i64", "i64", "i64"], 
               ["r32", "bul", "r32"], 
               ["r32", "i32", "r32"], 
               ["r32", "i64", "r32"], 
               ["r32", "r32", "bul"], 
               ["r32", "r32", "i32"], 
               ["r32", "r32", "i64"], 
               ["r32", "r32", "r32"], 
               ["r64", "bul", "r64"], 
               ["r64", "i32", "r64"], 
               ["r64", "i64", "r64"], 
               ["r64", "r32", "r64"], 
               ["r64", "r64", "bul"], 
               ["r64", "r64", "i32"], 
               ["r64", "r64", "i64"], 
               ["r64", "r64", "r32"], 
               ["r64", "r64", "r64"]]]
         }], 
   ["arithmetic", "mod", 2, {
            "array": [
            "*res->value().{res_t} = bxx::bh_mod(*in1->value().{in1_t}, *in2->value().{in2_t})", 
            [
               ["i32_a", "i32_a", "i32_a"], 
               ["i64_a", "i64_a", "i64_a"]]],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} % in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["i32", "bul", "i32"], 
               ["i32", "i32", "bul"], 
               ["i32", "i32", "i32"], 
               ["i64", "bul", "i64"], 
               ["i64", "i32", "i64"], 
               ["i64", "i64", "bul"], 
               ["i64", "i64", "i32"], 
               ["i64", "i64", "i64"]]]
         }], 
   ["arithmetic", "div", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} / in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["i32", "bul", "i32"], 
               ["i32", "i32", "bul"], 
               ["i32", "i32", "i32"], 
               ["i64", "bul", "i64"], 
               ["i64", "i32", "i64"], 
               ["i64", "i64", "bul"], 
               ["i64", "i64", "i32"], 
               ["i64", "i64", "i64"], 
               ["r32", "bul", "r32"], 
               ["r32", "i32", "r32"], 
               ["r32", "i64", "r32"], 
               ["r32", "r32", "bul"], 
               ["r32", "r32", "i32"], 
               ["r32", "r32", "i64"], 
               ["r32", "r32", "r32"], 
               ["r64", "bul", "r64"], 
               ["r64", "i32", "r64"], 
               ["r64", "i64", "r64"], 
               ["r64", "r32", "r64"], 
               ["r64", "r64", "bul"], 
               ["r64", "r64", "i32"], 
               ["r64", "r64", "i64"], 
               ["r64", "r64", "r32"], 
               ["r64", "r64", "r64"]]]
         }], 
   ["arithmetic", "pow", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = pow(in1->value().{in1_t}, in2->value().{in2_t})", 
            [
               ["bul", "bul", "bul"], 
               ["i32", "bul", "i32"], 
               ["i32", "i32", "bul"], 
               ["i32", "i32", "i32"], 
               ["i64", "bul", "i64"], 
               ["i64", "i32", "i64"], 
               ["i64", "i64", "bul"], 
               ["i64", "i64", "i32"], 
               ["i64", "i64", "i64"], 
               ["r32", "bul", "r32"], 
               ["r32", "i32", "r32"], 
               ["r32", "i64", "r32"], 
               ["r32", "r32", "bul"], 
               ["r32", "r32", "i32"], 
               ["r32", "r32", "i64"], 
               ["r32", "r32", "r32"], 
               ["r64", "bul", "r64"], 
               ["r64", "i32", "r64"], 
               ["r64", "i64", "r64"], 
               ["r64", "r32", "r64"], 
               ["r64", "r64", "bul"], 
               ["r64", "r64", "i32"], 
               ["r64", "r64", "i64"], 
               ["r64", "r64", "r32"], 
               ["r64", "r64", "r64"]]]
         }], 
   ["comparison", "lthan", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} < in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["bul", "bul", "i32"], 
               ["bul", "bul", "i64"], 
               ["bul", "bul", "r32"], 
               ["bul", "bul", "r64"], 
               ["bul", "i32", "bul"], 
               ["bul", "i32", "i32"], 
               ["bul", "i32", "i64"], 
               ["bul", "i32", "r32"], 
               ["bul", "i32", "r64"], 
               ["bul", "i64", "bul"], 
               ["bul", "i64", "i32"], 
               ["bul", "i64", "i64"], 
               ["bul", "i64", "r32"], 
               ["bul", "i64", "r64"], 
               ["bul", "r32", "bul"], 
               ["bul", "r32", "i32"], 
               ["bul", "r32", "i64"], 
               ["bul", "r32", "r32"], 
               ["bul", "r32", "r64"], 
               ["bul", "r64", "bul"], 
               ["bul", "r64", "i32"], 
               ["bul", "r64", "i64"], 
               ["bul", "r64", "r32"], 
               ["bul", "r64", "r64"]]]
         }], 
   ["comparison", "gthan", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} > in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["bul", "bul", "i32"], 
               ["bul", "bul", "i64"], 
               ["bul", "bul", "r32"], 
               ["bul", "bul", "r64"], 
               ["bul", "i32", "bul"], 
               ["bul", "i32", "i32"], 
               ["bul", "i32", "i64"], 
               ["bul", "i32", "r32"], 
               ["bul", "i32", "r64"], 
               ["bul", "i64", "bul"], 
               ["bul", "i64", "i32"], 
               ["bul", "i64", "i64"], 
               ["bul", "i64", "r32"], 
               ["bul", "i64", "r64"], 
               ["bul", "r32", "bul"], 
               ["bul", "r32", "i32"], 
               ["bul", "r32", "i64"], 
               ["bul", "r32", "r32"], 
               ["bul", "r32", "r64"], 
               ["bul", "r64", "bul"], 
               ["bul", "r64", "i32"], 
               ["bul", "r64", "i64"], 
               ["bul", "r64", "r32"], 
               ["bul", "r64", "r64"]]]
         }], 
   ["comparison", "equal", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} == in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["bul", "bul", "i32"], 
               ["bul", "bul", "i64"], 
               ["bul", "bul", "r32"], 
               ["bul", "bul", "r64"], 
               ["bul", "i32", "bul"], 
               ["bul", "i32", "i32"], 
               ["bul", "i32", "i64"], 
               ["bul", "i32", "r32"], 
               ["bul", "i32", "r64"], 
               ["bul", "i64", "bul"], 
               ["bul", "i64", "i32"], 
               ["bul", "i64", "i64"], 
               ["bul", "i64", "r32"], 
               ["bul", "i64", "r64"], 
               ["bul", "r32", "bul"], 
               ["bul", "r32", "i32"], 
               ["bul", "r32", "i64"], 
               ["bul", "r32", "r32"], 
               ["bul", "r32", "r64"], 
               ["bul", "r64", "bul"], 
               ["bul", "r64", "i32"], 
               ["bul", "r64", "i64"], 
               ["bul", "r64", "r32"], 
               ["bul", "r64", "r64"]]]
         }], 
   ["comparison", "not_equal", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} != in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["bul", "bul", "i32"], 
               ["bul", "bul", "i64"], 
               ["bul", "bul", "r32"], 
               ["bul", "bul", "r64"], 
               ["bul", "i32", "bul"], 
               ["bul", "i32", "i32"], 
               ["bul", "i32", "i64"], 
               ["bul", "i32", "r32"], 
               ["bul", "i32", "r64"], 
               ["bul", "i64", "bul"], 
               ["bul", "i64", "i32"], 
               ["bul", "i64", "i64"], 
               ["bul", "i64", "r32"], 
               ["bul", "i64", "r64"], 
               ["bul", "r32", "bul"], 
               ["bul", "r32", "i32"], 
               ["bul", "r32", "i64"], 
               ["bul", "r32", "r32"], 
               ["bul", "r32", "r64"], 
               ["bul", "r64", "bul"], 
               ["bul", "r64", "i32"], 
               ["bul", "r64", "i64"], 
               ["bul", "r64", "r32"], 
               ["bul", "r64", "r64"]]]
         }], 
   ["comparison", "lthan_equal", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} <= in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["bul", "bul", "i32"], 
               ["bul", "bul", "i64"], 
               ["bul", "bul", "r32"], 
               ["bul", "bul", "r64"], 
               ["bul", "i32", "bul"], 
               ["bul", "i32", "i32"], 
               ["bul", "i32", "i64"], 
               ["bul", "i32", "r32"], 
               ["bul", "i32", "r64"], 
               ["bul", "i64", "bul"], 
               ["bul", "i64", "i32"], 
               ["bul", "i64", "i64"], 
               ["bul", "i64", "r32"], 
               ["bul", "i64", "r64"], 
               ["bul", "r32", "bul"], 
               ["bul", "r32", "i32"], 
               ["bul", "r32", "i64"], 
               ["bul", "r32", "r32"], 
               ["bul", "r32", "r64"], 
               ["bul", "r64", "bul"], 
               ["bul", "r64", "i32"], 
               ["bul", "r64", "i64"], 
               ["bul", "r64", "r32"], 
               ["bul", "r64", "r64"]]]
         }], 
   ["comparison", "gthan_equal", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} >= in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["bul", "bul", "i32"], 
               ["bul", "bul", "i64"], 
               ["bul", "bul", "r32"], 
               ["bul", "bul", "r64"], 
               ["bul", "i32", "bul"], 
               ["bul", "i32", "i32"], 
               ["bul", "i32", "i64"], 
               ["bul", "i32", "r32"], 
               ["bul", "i32", "r64"], 
               ["bul", "i64", "bul"], 
               ["bul", "i64", "i32"], 
               ["bul", "i64", "i64"], 
               ["bul", "i64", "r32"], 
               ["bul", "i64", "r64"], 
               ["bul", "r32", "bul"], 
               ["bul", "r32", "i32"], 
               ["bul", "r32", "i64"], 
               ["bul", "r32", "r32"], 
               ["bul", "r32", "r64"], 
               ["bul", "r64", "bul"], 
               ["bul", "r64", "i32"], 
               ["bul", "r64", "i64"], 
               ["bul", "r64", "r32"], 
               ["bul", "r64", "r64"]]]
         }], 
   ["logical", "and", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} && in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["bul", "bul", "i32"], 
               ["bul", "bul", "i64"], 
               ["bul", "bul", "r32"], 
               ["bul", "bul", "r64"], 
               ["bul", "i32", "bul"], 
               ["bul", "i32", "i32"], 
               ["bul", "i32", "i64"], 
               ["bul", "i32", "r32"], 
               ["bul", "i32", "r64"], 
               ["bul", "i64", "bul"], 
               ["bul", "i64", "i32"], 
               ["bul", "i64", "i64"], 
               ["bul", "i64", "r32"], 
               ["bul", "i64", "r64"], 
               ["bul", "r32", "bul"], 
               ["bul", "r32", "i32"], 
               ["bul", "r32", "i64"], 
               ["bul", "r32", "r32"], 
               ["bul", "r32", "r64"], 
               ["bul", "r64", "bul"], 
               ["bul", "r64", "i32"], 
               ["bul", "r64", "i64"], 
               ["bul", "r64", "r32"], 
               ["bul", "r64", "r64"]]]
         }], 
   ["logical", "or", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} || in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["bul", "bul", "i32"], 
               ["bul", "bul", "i64"], 
               ["bul", "bul", "r32"], 
               ["bul", "bul", "r64"], 
               ["bul", "i32", "bul"], 
               ["bul", "i32", "i32"], 
               ["bul", "i32", "i64"], 
               ["bul", "i32", "r32"], 
               ["bul", "i32", "r64"], 
               ["bul", "i64", "bul"], 
               ["bul", "i64", "i32"], 
               ["bul", "i64", "i64"], 
               ["bul", "i64", "r32"], 
               ["bul", "i64", "r64"], 
               ["bul", "r32", "bul"], 
               ["bul", "r32", "i32"], 
               ["bul", "r32", "i64"], 
               ["bul", "r32", "r32"], 
               ["bul", "r32", "r64"], 
               ["bul", "r64", "bul"], 
               ["bul", "r64", "i32"], 
               ["bul", "r64", "i64"], 
               ["bul", "r64", "r32"], 
               ["bul", "r64", "r64"]]]
         }], 
   ["logical", "xor", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} || in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["bul", "bul", "i32"], 
               ["bul", "bul", "i64"], 
               ["bul", "bul", "r32"], 
               ["bul", "bul", "r64"], 
               ["bul", "i32", "bul"], 
               ["bul", "i32", "i32"], 
               ["bul", "i32", "i64"], 
               ["bul", "i32", "r32"], 
               ["bul", "i32", "r64"], 
               ["bul", "i64", "bul"], 
               ["bul", "i64", "i32"], 
               ["bul", "i64", "i64"], 
               ["bul", "i64", "r32"], 
               ["bul", "i64", "r64"], 
               ["bul", "r32", "bul"], 
               ["bul", "r32", "i32"], 
               ["bul", "r32", "i64"], 
               ["bul", "r32", "r32"], 
               ["bul", "r32", "r64"], 
               ["bul", "r64", "bul"], 
               ["bul", "r64", "i32"], 
               ["bul", "r64", "i64"], 
               ["bul", "r64", "r32"], 
               ["bul", "r64", "r64"]]]
         }], 
   ["logical", "not", 1, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = !in1->value().{in1_t}", 
            [
               ["bul", "bul"], 
               ["bul", "i32"], 
               ["bul", "i64"], 
               ["bul", "r32"], 
               ["bul", "r64"]]]
         }], 
   ["bitwise", "bw_lshift", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} << in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["i32", "bul", "i32"], 
               ["i32", "i32", "bul"], 
               ["i32", "i32", "i32"], 
               ["i64", "bul", "i64"], 
               ["i64", "i32", "i64"], 
               ["i64", "i64", "bul"], 
               ["i64", "i64", "i32"], 
               ["i64", "i64", "i64"]]]
         }], 
   ["bitwise", "bw_rshift", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} >> in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["i32", "bul", "i32"], 
               ["i32", "i32", "bul"], 
               ["i32", "i32", "i32"], 
               ["i64", "bul", "i64"], 
               ["i64", "i32", "i64"], 
               ["i64", "i64", "bul"], 
               ["i64", "i64", "i32"], 
               ["i64", "i64", "i64"]]]
         }], 
   ["bitwise", "bw_and", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} & in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["i32", "bul", "i32"], 
               ["i32", "i32", "bul"], 
               ["i32", "i32", "i32"], 
               ["i64", "bul", "i64"], 
               ["i64", "i32", "i64"], 
               ["i64", "i64", "bul"], 
               ["i64", "i64", "i32"], 
               ["i64", "i64", "i64"]]]
         }], 
   ["bitwise", "bw_or", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} | in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["i32", "bul", "i32"], 
               ["i32", "i32", "bul"], 
               ["i32", "i32", "i32"], 
               ["i64", "bul", "i64"], 
               ["i64", "i32", "i64"], 
               ["i64", "i64", "bul"], 
               ["i64", "i64", "i32"], 
               ["i64", "i64", "i64"]]]
         }], 
   ["bitwise", "bw_xor", 2, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = in1->value().{in1_t} ^ in2->value().{in2_t}", 
            [
               ["bul", "bul", "bul"], 
               ["i32", "bul", "i32"], 
               ["i32", "i32", "bul"], 
               ["i32", "i32", "i32"], 
               ["i64", "bul", "i64"], 
               ["i64", "i32", "i64"], 
               ["i64", "i64", "bul"], 
               ["i64", "i64", "i32"], 
               ["i64", "i64", "i64"]]]
         }], 
   ["bitwise", "bw_not", 1, {
            "array": ["", []],
            "complex": ["", []],
            "scalar": [
            "res->value().{res_t} = ~ in1->value().{in1_t}", 
            [
               ["bul", "bul"], 
               ["i32", "bul"], 
               ["i32", "i32"], 
               ["i64", "bul"], 
               ["i64", "i32"], 
               ["i64", "i64"]]]
         }]],
   "vtype2ast": {
      "bul": "Bul",
      "bul_a": "BulA",
      "c128": "C128",
      "c128_a": "C128A",
      "c64": "C64",
      "c64_a": "C64A",
      "i32": "I32",
      "i32_a": "I32A",
      "i64": "I64",
      "i64_a": "I64A",
      "r32": "R32",
      "r32_a": "R32A",
      "r64": "R64",
      "r64_a": "R64A"
   },
   "vtype2ctype": {
      "bul": "bool",
      "bul_a": "bxx::multi_array<bool>*",
      "c128": "std::complex<double>*",
      "c128_a": "bxx::multi_array<std::complex<double> >*",
      "c64": "std::complex<float>*",
      "c64_a": "bxx::multi_array<std::complex<float> >*",
      "i32": "int32_t",
      "i32_a": "bxx::multi_array<int32_t>*",
      "i64": "int64_t",
      "i64_a": "bxx::multi_array<int64_t>*",
      "r32": "float",
      "r32_a": "bxx::multi_array<float>*",
      "r64": "double",
      "r64_a": "bxx::multi_array<double>*"
   },
   "vtype2enum": {
      "bul": "NLS_BUL",
      "bul_a": "NLS_BUL_A",
      "c128": "NLS_C128",
      "c128_a": "NLS_C128_A",
      "c64": "NLS_C64",
      "c64_a": "NLS_C64_A",
      "i32": "NLS_I32",
      "i32_a": "NLS_I32_A",
      "i64": "NLS_I64",
      "i64_a": "NLS_I64_A",
      "r32": "NLS_R32",
      "r32_a": "NLS_R32_A",
      "r64": "NLS_R64",
      "r64_a": "NLS_R64_A"
   },
   "vtypes": ["bul", "i32", "i64", "r32", "r64", "c64", "c128", "bul_a", "i32_a", "i64_a", "r32_a", "r64_a", "c64_a", "c128_a"],
   "vtypes_grouped": {
      "array": ["bul_a", "i32_a", "i64_a", "r32_a", "r64_a", "c64_a", "c128_a"],
      "complex": ["c64", "c128"],
      "scalar": ["bul", "i32", "i64", "r32", "r64"]
   }
}
