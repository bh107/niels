/*
    NOTE: This file is generated by:

    * Declaration:  autogen/ast.yaml
    * Logic:        autogen/ast.py
    * Template:     autogen/templates/node_skeleton_cc.tpl

    Modify the above files to persist changes.

    Locally changing this file is possible, however, be aware that cmake
    picks up changes to ANY file in autogen/* and thereby
    overwrites ALL local changes to ANY generated file.
*/
#include <${namespace["name"]}/ast/${node["name"]}.hh>
#include <${namespace["name"]}/ast/visitor/visitor.hh>

using namespace std;
namespace ${namespace["name"]} {
namespace ast {

${node["class"]}::${node["class"]}(void) : Node() { }

${node["class"]}::${node["class"]}(Node* left) : Node(left) { }

${node["class"]}::${node["class"]}(Node* left, Node* right) : Node(left, right) { }

% if node["constr_lval"]:
${node["class"]}::${node["class"]}(const char* lval)
{
${node["constr_lval"]}
}
% endif

void ${node["class"]}::accept(Visitor& visitor)
{
    visitor.visit(*this);
}
string ${node["class"]}::dot_label(void)
{
    return "${node["class"]}";
}

string ${node["class"]}::dot_shape(void)
{
    return "${node["shape"]}";
}

}}

