/*
    NOTE: This file is autogenerated.
*/
#include <${namespace_name}/ast/${node_name}.hh>
#include <${namespace_name}/ast/syntax_checker.hh>
#include <${namespace_name}/ast/type_checker.hh>
#include <${namespace_name}/ast/transformer.hh>
#include <${namespace_name}/ast/evaluator.hh>

namespace ${namespace_name} {
namespace ast {

${node_class}::${node_class}() : Node(left, right) { }
${node_class}::${node_class}(Node* left) : Node(left) { }
${node_class}::${node_class}(Node* left, Node* right) : Node(left, right) { }
string ${node_class}::dot_label(void) { return "${node_class}"; }
string ${node_class}::dot_shape(void) { return "${node_shape}"; }

void ${node_class}::accept(SyntaxChecker& visitor)
{
    visitor.visit(*this);
}
void ${node_class}::accept(TypeChecker& visitor)
{
    visitor.visit(*this);
}
void ${node_class}::accept(Transformer& visitor)
{
    visitor.visit(*this);
}
void ${node_class}::accept(Evaluator& visitor)
{
    visitor.visit(*this);
}
void ${node_class}::accept(Dotifier& visitor)
{
    visitor.visit(*this);
}

}}

